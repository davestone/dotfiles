[user]
	name = Dave Stone
	email = dave@davecstone.com
[gitflow "branch"]
	master = master
	develop = develop
[gitflow "prefix"]
	feature = feature/
	release = release/
	hotfix = hotfix/
	support = support/
	versiontag = 
[filter "media"]
	required = true
	clean = git media clean %f
	smudge = git media smudge %f
[alias]
	st = status
	ci = commit
	cm = commit -am
	br = branch
	co = checkout
	df = diff
	lp = log -p
	c = cherry-pick
	b = checkout -
	who = shortlog -n -s --no-merges
	undo = reset --hard
	lc = log ORIG_HEAD.. --stat --no-merges
	lg = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --date=relative
	lw = log --graph --pretty=format:'%s %Cgreen(%cr) ' --abbrev-commit --date=relative --author JoÌˆrn
	lf = log --pretty=fuller
	cleanup = !git gc && git remote prune origin
	fork = remote add -f
	ghpages = !git pull && git co gh-pages && git merge master && git push && git co master
	prom = pull --rebase
	pd = !pretty-diff
	gd = !gist-diff
	cp = cherry-pick
	amend = commit -a --amend
	pr = "!f() { git fetch -fu origin refs/pull/$1/head:pr/$1 ; git co pr/$1; } ; f"
	pr-clean = "!git for-each-ref refs/heads/pr/* --format='%(refname)' | while read ref ; do branch=${ref#refs/heads/} ; git branch -D $branch ; done"
	branch=${ref#refs/heads/} ; git branch -D $branch ; done"
